name: Build Docker images

on:
  push:
    branches:
    - build/*
  # pull_request:
  # - opened

jobs:
  # build-docker-compose:
  #   name: Build with docker-compose
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: compose dependencies
  #     run: |
  #       docker-compose version

  #   - name: checkout
  #     uses: actions/checkout@v1 # --quiet
  #     with:
  #       fetch-depth: 1

  #   - name: docker-compose build
  #     env:
  #       LLB: docker-build
  #     run: |
  #       echo "Show images to be built"
  #       docker-compose -f docker-compose.yml -f docker-compose.stage-2.yml config

  #       echo "Building images"
  #       # docker-compose build --parallel  ##  old version on the gihub action node, prevent us from using --parallel
  #       docker-compose build

  #       echo "Building images that depend on the previous stage"
  #       docker-compose -f docker-compose.stage-2.yml build

  #       echo "Show tagged images"
  #       docker images


  build-docker-compose-image:
    name: Build with docker-compose image
    runs-on: ubuntu-latest

    steps:
    # - name: docker version
    #   uses: docker://docker/compose:1.25.0-rc2
    #   with:
    #     args: docker version

    # - name: checkout
    #   uses: actions/checkout@v1 # --quiet
    #   with:
    #     fetch-depth: 1

    - name: printenv
      run: printenv

    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJson(strategy) }}
      run: echo "$STRATEGY_CONTEXT"

    - name: docker-compose printenv
      env:
        INVOCATION_ID_0: ${{ echo $INVOCATION_ID }}
      uses: docker://busybox
      with:
        args: printenv

  #   - name: docker-compose config
  #     env:
  #       LLB: docker-build
  #       # INVOCATION_ID: dunnowhattoputhere
  #     uses: docker://docker/compose:1.25.0-rc2
  #     with:
  #       args: docker-compose -f docker-compose.yml -f docker-compose.stage-2.yml config

  #   - name: Building images
  #     env:
  #       LLB: docker-build
  #       # INVOCATION_ID: dunnowhattoputhere
  #     uses: docker://docker/compose:1.25.0-rc2
  #     with:
  #       args: docker-compose build --parallel

  #   - name: Building images that depend on the previous stage
  #     env:
  #       LLB: docker-build
  #       # INVOCATION_ID: dunnowhattoputhere
  #     uses: docker://docker/compose:1.25.0-rc2
  #     with:
  #       args: docker-compose -f docker-compose.stage-2.yml build --parallel

  #   - name: Show tagged images
  #     run: docker images


  # build-buildx:
  #   name: Build with Buildx bake
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: buildx dependencies
  #     env:
  #       BUILDX_VER: v0.3.0
  #       DOCKER_CLI_EXPERIMENTAL: enabled
  #       DOCKER_BUILDKIT: 1
  #       PREFER_BUILDCTL: 1
  #     run: |
  #       docker version
  #       docker info
  #       mkdir -vp \
  #         ~/.docker/cli-plugins/ \
  #         ~/dockercache
  #       export PATH=~/.docker/cli-plugins/:$PATH
  #       ### install binaries
  #         # curl --silent -L https://github.com/docker/buildx/releases/download/"$BUILDX_VER"/buildx-"$BUILDX_VER".linux-amd64 > ~/.docker/cli-plugins/docker-buildx
  #         # chmod a+x ~/.docker/cli-plugins/docker-buildx
  #       ### build from source
  #         docker build --platform=local -o . git://github.com/docker/buildx
  #         mv -v buildx ~/.docker/cli-plugins/docker-buildx

  #       # docker-buildx create --use --buildkitd-flags '--oci-worker-gc=false'  ##  disable GC
  #       # docker-buildx create --use --driver docker-container --driver-opt image=moby/buildkit:master  ##  use buildkit image built from latest master
  #       # docker-buildx create --use --driver docker-container --driver-opt image=moby/buildkit:master --buildkitd-flags '--load'  ##  load the single-platform build result to docker images
  #       # docker-buildx create --use --driver docker-container --driver-opt image=moby/buildkit:master --buildkitd-flags '--oci-worker-gc=false --load --cache-to=type=local,dest=~/dockercache'  ##  export docker layers cache
  #       docker-buildx ls

  #   - name: checkout
  #     uses: actions/checkout@v1 # --quiet
  #     with:
  #       fetch-depth: 1

  #   - name: buildx bake
  #     env:
  #       DOCKER_CLI_EXPERIMENTAL: enabled
  #       PREFER_BUILDCTL: 1
  #       DOCKER_BUILDKIT: 1
  #       LLB: buildkit
  #     run: |
  #       export PATH=~/.docker/cli-plugins/:$PATH

  #       echo "Show images to be built"
  #       docker-compose -f docker-compose.yml -f docker-compose.stage-2.yml -f buildx.yml -f buildx.stage-2.yml config
  #       docker-buildx bake -f docker-compose.yml -f docker-compose.stage-2.yml -f buildx.yml -f buildx.stage-2.yml --print

  #       echo "Building images"
  #       # docker-buildx bake --progress plain -f docker-compose.yml -f buildx.yml
  #       docker-buildx bake -f docker-compose.yml -f buildx.yml

  #       echo "Building images that depend on the previous stage"
  #       docker-buildx bake -f docker-compose.stage-2.yml -f buildx.stage-2.yml

  #       echo "Show tagged images"
  #       docker images

  #       # echo "Show Docker layer cache"
  #       # ls -lahtr ~/dockercache/
